!function(e){var t={};function r(o){if(t[o])return t[o].exports;var n=t[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=t,r.d=function(e,t,o){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(o,n,function(t){return e[t]}.bind(null,n));return o},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t){importScripts("https://storage.googleapis.com/workbox-cdn/releases/3.2.0/workbox-sw.js"),workbox?(console.log("deu certo saporra"),workbox.routing.registerRoute("/",workbox.strategies.networkFirst({cacheName:"html-cache"})),workbox.routing.registerRoute(/.*\.css/,workbox.strategies.networkFirst({cacheName:"css-cache"})),workbox.routing.registerRoute(/.*\.(?:png|jpg|jpeg|svg|gif)/,workbox.strategies.networkFirst({cacheName:"image-cache",plugins:[new workbox.expiration.Plugin({maxEntries:20,maxAgeSeconds:604800})]})),workbox.routing.registerRoute(/.*\.js/,workbox.strategies.networkFirst({cacheName:"js-cache"}))):console.log("num foi :(");var r={offline:"offline-cache1"};self.addEventListener("install",function(e){e.waitUntil(caches.open(r.offline).then(function(e){return e.addAll(["offline-page.html"])}))}),self.addEventListener("fetch",function(e){"navigate"===e.request.mode||"GET"===e.request.method&&e.request.headers.get("accept").includes("text/html")?e.respondWith(fetch(e.request.url).catch(function(e){return caches.match("offline-page.html")})):e.respondWith(caches.match(e.request).then(function(t){return t||fetch(e.request)}))})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,